/*
Dropbox Sign API

Dropbox Sign v3 API

API version: 3.0.0
Contact: apisupport@hellosign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dropboxsign

import (
	"encoding/json"
)

// SignatureRequestResponseDataValueCheckboxMerge struct for SignatureRequestResponseDataValueCheckboxMerge
type SignatureRequestResponseDataValueCheckboxMerge struct {
	// A checkbox field that has default value set by the api
	Type *string `json:"type,omitempty"`
	// The value of the form field.
	Value *string `json:"value,omitempty"`
}

// NewSignatureRequestResponseDataValueCheckboxMerge instantiates a new SignatureRequestResponseDataValueCheckboxMerge object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignatureRequestResponseDataValueCheckboxMerge() *SignatureRequestResponseDataValueCheckboxMerge {
	this := SignatureRequestResponseDataValueCheckboxMerge{}
	var type_ string = "checkbox-merge"
	this.Type = &type_
	return &this
}

// NewSignatureRequestResponseDataValueCheckboxMergeWithDefaults instantiates a new SignatureRequestResponseDataValueCheckboxMerge object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignatureRequestResponseDataValueCheckboxMergeWithDefaults() *SignatureRequestResponseDataValueCheckboxMerge {
	this := SignatureRequestResponseDataValueCheckboxMerge{}
	var type_ string = "checkbox-merge"
	this.Type = &type_
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SignatureRequestResponseDataValueCheckboxMerge) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponseDataValueCheckboxMerge) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SignatureRequestResponseDataValueCheckboxMerge) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *SignatureRequestResponseDataValueCheckboxMerge) SetType(v string) {
	o.Type = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *SignatureRequestResponseDataValueCheckboxMerge) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureRequestResponseDataValueCheckboxMerge) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *SignatureRequestResponseDataValueCheckboxMerge) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *SignatureRequestResponseDataValueCheckboxMerge) SetValue(v string) {
	o.Value = &v
}

func (o SignatureRequestResponseDataValueCheckboxMerge) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableSignatureRequestResponseDataValueCheckboxMerge struct {
	value *SignatureRequestResponseDataValueCheckboxMerge
	isSet bool
}

func (v NullableSignatureRequestResponseDataValueCheckboxMerge) Get() *SignatureRequestResponseDataValueCheckboxMerge {
	return v.value
}

func (v *NullableSignatureRequestResponseDataValueCheckboxMerge) Set(val *SignatureRequestResponseDataValueCheckboxMerge) {
	v.value = val
	v.isSet = true
}

func (v NullableSignatureRequestResponseDataValueCheckboxMerge) IsSet() bool {
	return v.isSet
}

func (v *NullableSignatureRequestResponseDataValueCheckboxMerge) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignatureRequestResponseDataValueCheckboxMerge(val *SignatureRequestResponseDataValueCheckboxMerge) *NullableSignatureRequestResponseDataValueCheckboxMerge {
	return &NullableSignatureRequestResponseDataValueCheckboxMerge{value: val, isSet: true}
}

func (v NullableSignatureRequestResponseDataValueCheckboxMerge) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignatureRequestResponseDataValueCheckboxMerge) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


