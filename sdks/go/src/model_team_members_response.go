/*
Dropbox Sign API

Dropbox Sign v3 API

API version: 3.0.0
Contact: apisupport@hellosign.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dropboxsign

import (
	"encoding/json"
)

// TeamMembersResponse struct for TeamMembersResponse
type TeamMembersResponse struct {
	// Contains a list of team members and their roles for a specific team.
	TeamMembers *[]TeamMemberResponse `json:"team_members,omitempty"`
	ListInfo *ListInfoResponse `json:"list_info,omitempty"`
	Warnings *[]WarningResponse `json:"warnings,omitempty"`
}

// NewTeamMembersResponse instantiates a new TeamMembersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamMembersResponse() *TeamMembersResponse {
	this := TeamMembersResponse{}
	return &this
}

// NewTeamMembersResponseWithDefaults instantiates a new TeamMembersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamMembersResponseWithDefaults() *TeamMembersResponse {
	this := TeamMembersResponse{}
	return &this
}

// GetTeamMembers returns the TeamMembers field value if set, zero value otherwise.
func (o *TeamMembersResponse) GetTeamMembers() []TeamMemberResponse {
	if o == nil || o.TeamMembers == nil {
		var ret []TeamMemberResponse
		return ret
	}
	return *o.TeamMembers
}

// GetTeamMembersOk returns a tuple with the TeamMembers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamMembersResponse) GetTeamMembersOk() (*[]TeamMemberResponse, bool) {
	if o == nil || o.TeamMembers == nil {
		return nil, false
	}
	return o.TeamMembers, true
}

// HasTeamMembers returns a boolean if a field has been set.
func (o *TeamMembersResponse) HasTeamMembers() bool {
	if o != nil && o.TeamMembers != nil {
		return true
	}

	return false
}

// SetTeamMembers gets a reference to the given []TeamMemberResponse and assigns it to the TeamMembers field.
func (o *TeamMembersResponse) SetTeamMembers(v []TeamMemberResponse) {
	o.TeamMembers = &v
}

// GetListInfo returns the ListInfo field value if set, zero value otherwise.
func (o *TeamMembersResponse) GetListInfo() ListInfoResponse {
	if o == nil || o.ListInfo == nil {
		var ret ListInfoResponse
		return ret
	}
	return *o.ListInfo
}

// GetListInfoOk returns a tuple with the ListInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamMembersResponse) GetListInfoOk() (*ListInfoResponse, bool) {
	if o == nil || o.ListInfo == nil {
		return nil, false
	}
	return o.ListInfo, true
}

// HasListInfo returns a boolean if a field has been set.
func (o *TeamMembersResponse) HasListInfo() bool {
	if o != nil && o.ListInfo != nil {
		return true
	}

	return false
}

// SetListInfo gets a reference to the given ListInfoResponse and assigns it to the ListInfo field.
func (o *TeamMembersResponse) SetListInfo(v ListInfoResponse) {
	o.ListInfo = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *TeamMembersResponse) GetWarnings() []WarningResponse {
	if o == nil || o.Warnings == nil {
		var ret []WarningResponse
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamMembersResponse) GetWarningsOk() (*[]WarningResponse, bool) {
	if o == nil || o.Warnings == nil {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *TeamMembersResponse) HasWarnings() bool {
	if o != nil && o.Warnings != nil {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []WarningResponse and assigns it to the Warnings field.
func (o *TeamMembersResponse) SetWarnings(v []WarningResponse) {
	o.Warnings = &v
}

func (o TeamMembersResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TeamMembers != nil {
		toSerialize["team_members"] = o.TeamMembers
	}
	if o.ListInfo != nil {
		toSerialize["list_info"] = o.ListInfo
	}
	if o.Warnings != nil {
		toSerialize["warnings"] = o.Warnings
	}
	return json.Marshal(toSerialize)
}

type NullableTeamMembersResponse struct {
	value *TeamMembersResponse
	isSet bool
}

func (v NullableTeamMembersResponse) Get() *TeamMembersResponse {
	return v.value
}

func (v *NullableTeamMembersResponse) Set(val *TeamMembersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamMembersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamMembersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamMembersResponse(val *TeamMembersResponse) *NullableTeamMembersResponse {
	return &NullableTeamMembersResponse{value: val, isSet: true}
}

func (v NullableTeamMembersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamMembersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


